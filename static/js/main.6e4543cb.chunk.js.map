{"version":3,"sources":["resource/img/logo.svg","common/Util.js","components/layout/container/LayoutContainar.js","routes/home/index.js","routes/scroll/index.js","routes/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Util","id","id2","duration","step","timer","clearInterval","set","node","document","getElementById","node2","top","window","pageYOffset","getBoundingClientRect","top2","this","setInterval","scrollTo","LayoutContainar","state","topScrollBut","opacity","layBarBut","layBarButIcon","layBar","width","layMain","routesList","scrollListener","setState","onClick","left","transform","props","routes","addEventListener","removeEventListener","cayoutContent","className","style","util","Icon","name","zIndex","position","Input","fluid","icon","placeholder","onChange","e","v","map","n","includes","value","push","i","key","to","path","size","Component","Home","src","logo","alt","href","target","rel","Scroll","component","Routes","Fragment","from","r","exact","App","StrictMode","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mFAAAA,EAAOC,QAAU,IAA0B,kC,+OCAtBC,E,wGAKwC,IAAD,OAA1CC,EAA0C,uDAArC,OAAQC,EAA6B,uDAAvB,OAAQC,EAAe,uDAAJ,GAC9CC,EAAO,SAACC,GACZC,cAAcD,GACd,EAAKA,MAAQ,MAIXE,EAAM,EACJC,EAAOC,SAASC,eAAeT,GAC/BU,EAAQF,SAASC,eAAeR,GAClCU,EAAMC,OAAOC,YAAcN,EAAKO,wBAAwBH,IACtDI,EAAOH,OAAOC,YAAcH,EAAMI,wBAAwBH,IAEpD,IAARA,IACFA,EAAMC,OAAOC,aAGXF,EAAMI,IACRT,EAAMK,GAGRK,KAAKZ,MAAQa,aAAY,WACnBN,EAAMI,EAEG,EAAPA,GAAkB,GADtBT,GAAOJ,IAELU,OAAOM,SAAS,EAAGH,GACnBZ,EAAK,EAAKC,QAEVQ,OAAOM,SAAS,EAAGZ,GAIV,EAAPS,GAAkB,GADtBT,GAAOJ,IAELU,OAAOM,SAAS,EAAGH,GACnBZ,EAAK,EAAKC,QAEVQ,OAAOM,SAAS,EAAGZ,KAGtB,O,KCmHQa,E,4MAtJbC,MAAQ,CAENC,aAAc,CAAEC,QAAS,GAEzBC,UAAW,GACXC,cAAe,GACfC,OAAQ,CAAEC,MAAO,SACjBC,QAAS,CAAED,MAAO,sBAClBE,WAAY,I,EAkBdC,eAAiB,WACf,GAAIjB,OAAOC,YAAc,KACvB,IAAK,EAAKO,MAAMC,aAAaC,QAC3B,OAAO,EAAKQ,SAAS,CAAET,aAAc,CAAEC,QAAS,UAGlD,GAAI,EAAKF,MAAMC,aAAaC,QAC1B,OAAO,EAAKQ,SAAS,CAAET,aAAc,CAAEC,QAAS,M,EAKtDS,QAAU,WAGa,OAFF,EAAKX,MAAhBK,OAEGC,MACT,EAAKI,SAAS,CACZP,UAAW,GACXC,cAAe,GACfC,OAAQ,CAAEC,MAAO,SACjBC,QAAS,CAAED,MAAO,wBAGpB,EAAKI,SAAS,CACZP,UAAW,CAAES,KAAM,OACnBR,cAAe,CAAES,UAAW,kBAC5BR,OAAQ,CAAEC,MAAO,MACjBC,QAAS,CAAED,MAAO,W,kEArCtBV,KAAKc,SAAS,CACZF,WAAYZ,KAAKkB,MAAMC,SAEzBvB,OAAOwB,iBAAiB,SAAUpB,KAAKa,kB,6CAIvCjB,OAAOyB,oBAAoB,SAAUrB,KAAKa,kB,+BAmClC,IAAD,OACCS,EAAkBtB,KAAKkB,MAAvBI,cADD,EAUHtB,KAAKI,MAPPC,EAHK,EAGLA,aAEAM,EALK,EAKLA,QACAF,EANK,EAMLA,OACAF,EAPK,EAOLA,UACAC,EARK,EAQLA,cACAI,EATK,EASLA,WAEF,OACE,kBAAC,WAAD,KACE,yBAAKW,UAAU,mBAAmBC,MAAOnB,GACtCA,EAAaC,QACZ,4BACEiB,UAAU,4BACVR,QAAS,kBAAMU,EAAKvB,aAEpB,kBAACwB,EAAA,EAAD,CAEEF,MAAOhB,EACPmB,KAAK,oBAEJ,KAGL,IAGJ,yBACEH,MAAO,CACLI,OAAQ,EACRC,SAAU,UAGZ,yBAAKN,UAAU,aAAaC,MAAOf,GACjC,yBAAKc,UAAU,4BACb,kBAACO,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,SACLC,YAAY,YAEZC,SAAU,SAACC,EAAGC,GACZ,IAAMxB,EAAa,GACnB,EAAKM,MAAMC,OAAOkB,KAAI,SAACC,GACrB,OAAIA,EAAEX,KAAKY,SAASH,EAAEI,OACb5B,EAAW6B,KAAKH,GAElB,QAGT,EAAKxB,SAAS,CAAEF,mBAItB,yBAAKW,UAAU,mBACZX,EAAWyB,KAAI,SAACC,EAAGI,GAAJ,OACd,yBAAKC,IAAKD,GACR,kBAAC,IAAD,CAAME,GAAIN,EAAEO,MAAOP,EAAEX,YAK7B,yBACEJ,UAAU,oBACVC,MAAOjB,EACPQ,QAASf,KAAKe,SAOd,kBAACW,EAAA,EAAD,CAEEF,MAAOhB,EACPmB,KAAK,aACLmB,KAAK,UAKX,yBAAKvB,UAAU,cAAcC,MAAOb,GAClC,yBAAKY,UAAU,mBAAmBC,MAAOb,GACtCW,S,GAhJiByB,a,kBCiBfC,E,uKAnBX,OACE,4BAAQzB,UAAU,cAChB,yBAAK0B,IAAKC,IAAM3B,UAAU,WAAW4B,IAAI,SACzC,mCACO,4CADP,wBAGA,uBACE5B,UAAU,WACV6B,KAAK,sBACLC,OAAO,SACPC,IAAI,uBAJN,oB,GARWP,aCyBJQ,G,8KAtBJvE,EAAIC,GACXwC,EAAKvB,SAASlB,EAAIC,EAAK,M,+BAGf,IAAD,OACP,OACE,yBAAKsC,UAAU,QACb,yBAAKA,UAAU,iBACb,4BAAQvC,GAAG,MAAM+B,QAAS,kBAAM,EAAKb,SAAS,MAAO,YAArD,oBAGA,yBAAKqB,UAAU,0BACf,4BAAQvC,GAAG,SAAS+B,QAAS,kBAAM,EAAKb,SAAS,SAAU,SAA3D,iBAGA,yBAAKqB,UAAU,gC,GAhBJwB,cCGf5B,EAAS,CACb,CAAE0B,KAAM,IAAKlB,KAAM,OAAQ6B,UAAW,kBAAM,kBAAC,EAAD,QAC5C,CAAEX,KAAM,UAAWlB,KAAM,SAAU6B,UAAW,kBAAM,kBAAC,EAAD,QAEpD,CAAEX,KAAM,OAAQlB,KAAM,OACtB,CAAEkB,KAAM,SAAUlB,KAAM,SAExB,CACEkB,KAAM,iBACNlB,KAAM,kBA2BK8B,MAvBf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,CACEtC,OAAQA,EACRG,cACE,kBAAC,IAAMoC,SAAP,KACE,kBAAC,IAAD,CAAUC,KAAK,IAAIf,GAAG,MACrBzB,EAAOkB,KAAI,SAACuB,EAAGlB,GAAJ,OACV,kBAAC,IAAD,CACEC,IAAKD,EACLmB,MAAa,IAANnB,EACPG,KAAMe,EAAEf,KACRW,UAAWI,EAAEJ,oBCtBdM,MAVf,WACE,OACE,kBAAC,IAAMC,WAAP,KACE,yBAAKxC,UAAU,OACb,kBAAC,EAAD,SCKYyC,QACW,cAA7BpE,OAAOqE,SAASC,UAEe,UAA7BtE,OAAOqE,SAASC,UAEhBtE,OAAOqE,SAASC,SAASC,MACvB,2DCTNC,IAASC,OAAO,kBAAC,EAAD,MAAS7E,SAASC,eAAe,SD0H3C,kBAAmB6E,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.6e4543cb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","export default class Util {\r\n  /* ----------------------------\r\n   스무스 스크롤\r\n   \r\n   ---------------------------- */\r\n  static scrollTo(id = \"root\", id2 = \"root\", duration = 50) {\r\n    const step = (timer) => {\r\n      clearInterval(timer);\r\n      this.timer = null;\r\n      // this.set = 0;\r\n    };\r\n\r\n    let set = 0;\r\n    const node = document.getElementById(id);\r\n    const node2 = document.getElementById(id2);\r\n    let top = window.pageYOffset + node.getBoundingClientRect().top;\r\n    const top2 = window.pageYOffset + node2.getBoundingClientRect().top;\r\n\r\n    if (top === 0) {\r\n      top = window.pageYOffset;\r\n    }\r\n\r\n    if (top > top2) {\r\n      set = top;\r\n    }\r\n\r\n    this.timer = setInterval(() => {\r\n      if (top > top2) {\r\n        set -= duration;\r\n        if (top2 * 1 >= set * 1) {\r\n          window.scrollTo(0, top2);\r\n          step(this.timer);\r\n        } else {\r\n          window.scrollTo(0, set);\r\n        }\r\n      } else {\r\n        set += duration;\r\n        if (top2 * 1 <= set * 1) {\r\n          window.scrollTo(0, top2);\r\n          step(this.timer);\r\n        } else {\r\n          window.scrollTo(0, set);\r\n        }\r\n      }\r\n    }, 1);\r\n  }\r\n}\r\n\r\n// export default Util;\r\n// export { Util };\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// import { CgChevronDoubleUp, CgChevronLeft } from \"react-icons/cg\";\r\nimport { Input, Icon } from \"semantic-ui-react\";\r\n\r\nimport { util } from \"../../../common\";\r\n\r\nclass LayoutContainar extends Component {\r\n  state = {\r\n    //style\r\n    topScrollBut: { opacity: 0 },\r\n\r\n    layBarBut: {},\r\n    layBarButIcon: {},\r\n    layBar: { width: \"300px\" },\r\n    layMain: { width: \"calc(100% - 300px)\" },\r\n    routesList: [],\r\n  };\r\n\r\n  // constructor(props) {\r\n  //   super(props);\r\n  // }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      routesList: this.props.routes,\r\n    });\r\n    window.addEventListener(\"scroll\", this.scrollListener);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"scroll\", this.scrollListener);\r\n  }\r\n\r\n  scrollListener = () => {\r\n    if (window.pageYOffset > 100) {\r\n      if (!this.state.topScrollBut.opacity) {\r\n        return this.setState({ topScrollBut: { opacity: 1 } });\r\n      }\r\n    } else {\r\n      if (this.state.topScrollBut.opacity) {\r\n        return this.setState({ topScrollBut: { opacity: 0 } });\r\n      }\r\n    }\r\n  };\r\n\r\n  onClick = () => {\r\n    const { layBar } = this.state;\r\n\r\n    if (layBar.width === \"0%\") {\r\n      this.setState({\r\n        layBarBut: {},\r\n        layBarButIcon: {},\r\n        layBar: { width: \"300px\" },\r\n        layMain: { width: \"calc(100% - 300px)\" },\r\n      });\r\n    } else {\r\n      this.setState({\r\n        layBarBut: { left: \"0px\" },\r\n        layBarButIcon: { transform: \"rotate(180deg)\" },\r\n        layBar: { width: \"0%\" },\r\n        layMain: { width: \"100%\" },\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { cayoutContent } = this.props;\r\n    const {\r\n      topScrollBut,\r\n\r\n      layMain,\r\n      layBar,\r\n      layBarBut,\r\n      layBarButIcon,\r\n      routesList,\r\n    } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <div className=\"lay-topScrollBut\" style={topScrollBut}>\r\n          {topScrollBut.opacity ? (\r\n            <button\r\n              className=\"ui icon right button huge\"\r\n              onClick={() => util.scrollTo()}\r\n            >\r\n              <Icon\r\n                //loading\r\n                style={layBarButIcon}\r\n                name=\"angle double up\"\r\n                // size=\"large\"\r\n              />{\" \"}\r\n            </button>\r\n          ) : (\r\n            []\r\n          )}\r\n        </div>\r\n        <div\r\n          style={{\r\n            zIndex: 2,\r\n            position: \"fixed\",\r\n          }}\r\n        >\r\n          <div className=\"layout-bar\" style={layBar}>\r\n            <div className=\"layout-bar-search center\">\r\n              <Input\r\n                fluid\r\n                icon=\"search\"\r\n                placeholder=\"Search...\"\r\n                // value={this.state.value}\r\n                onChange={(e, v) => {\r\n                  const routesList = [];\r\n                  this.props.routes.map((n) => {\r\n                    if (n.name.includes(v.value)) {\r\n                      return routesList.push(n);\r\n                    }\r\n                    return null;\r\n                  });\r\n\r\n                  this.setState({ routesList });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"layout-bar-list\">\r\n              {routesList.map((n, i) => (\r\n                <div key={i}>\r\n                  <Link to={n.path}>{n.name}</Link>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"layout-bar-button\"\r\n            style={layBarBut}\r\n            onClick={this.onClick}\r\n          >\r\n            {/* <i\r\n              style={layBarButIcon}\r\n              aria-hidden=\"true\"\r\n              class=\"icon angle left big\"\r\n            /> */}\r\n            <Icon\r\n              //loading\r\n              style={layBarButIcon}\r\n              name=\"angle left\"\r\n              size=\"big\"\r\n            />\r\n            {/* <CgChevronLeft style={layBarButIcon} /> */}\r\n          </div>\r\n        </div>\r\n        <div className=\"layout-main\" style={layMain}>\r\n          <div className=\"lay-main-content\" style={layMain}>\r\n            {cayoutContent}\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nexport default LayoutContainar;\r\n","import React, { Component, Fragment } from \"react\";\r\n\r\nimport logo from \"../../resource/img/logo.svg\";\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { util } from \"../../common\";\r\n\r\nimport \"./scroll.scss\";\r\n\r\nclass Scroll extends Component {\r\n  scrollTo(id, id2) {\r\n    util.scrollTo(id, id2, 50);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main\">\r\n        <div className=\"smooth-scroll\">\r\n          <button id=\"top\" onClick={() => this.scrollTo(\"top\", \"bottom\")}>\r\n            scroll to bottom\r\n          </button>\r\n          <div className=\"smooth-scroll--spacer\" />\r\n          <button id=\"bottom\" onClick={() => this.scrollTo(\"bottom\", \"top\")}>\r\n            scroll to top\r\n          </button>\r\n          <div className=\"smooth-scroll--spacer\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Scroll;\r\n\r\n//https://codepen.io/brian-baum/pen/mJZxJX\r\n\r\n// var App = React.createClass({\r\n//   render: function () {\r\n//     return <div><SmoothScroll /></div>;\r\n//   }\r\n// });\r\n\r\n// var smoothScroll = {\r\n// \ttimer: null,\r\n\r\n// \tstop: function () {\r\n// \t\tclearTimeout(this.timer);\r\n// \t},\r\n\r\n// \tscrollTo: function (id, callback) {\r\n// \t\tvar settings = {\r\n// \t\t\tduration: 1000,\r\n// \t\t\teasing: {\r\n// \t\t\t\toutQuint: function (x, t, b, c, d) {\r\n// \t\t\t\t\treturn c*((t=t/d-1)*t*t*t*t + 1) + b;\r\n// \t\t\t\t}\r\n// \t\t\t}\r\n// \t\t};\r\n// \t\tvar percentage;\r\n// \t\tvar startTime;\r\n// \t\tvar node = document.getElementById(id);\r\n// \t\tvar nodeTop = node.offsetTop;\r\n// \t\tvar nodeHeight = node.offsetHeight;\r\n// \t\tvar body = document.body;\r\n// \t\tvar html = document.documentElement;\r\n// \t\tvar height = Math.max(\r\n// \t\t\tbody.scrollHeight,\r\n// \t\t\tbody.offsetHeight,\r\n// \t\t\thtml.clientHeight,\r\n// \t\t\thtml.scrollHeight,\r\n// \t\t\thtml.offsetHeight\r\n// \t\t);\r\n// \t\tvar windowHeight = window.innerHeight\r\n// \t\tvar offset = window.pageYOffset;\r\n// \t\tvar delta = nodeTop - offset;\r\n// \t\tvar bottomScrollableY = height - windowHeight;\r\n// \t\tvar targetY = (bottomScrollableY < delta) ?\r\n// \t\t\tbottomScrollableY - (height - nodeTop - nodeHeight + offset):\r\n// \t\t\tdelta;\r\n\r\n// \t\tstartTime = Date.now();\r\n// \t\tpercentage = 0;\r\n\r\n// \t\tif (this.timer) {\r\n// \t\t\tclearInterval(this.timer);\r\n// \t\t}\r\n\r\n// \t\tfunction step () {\r\n// \t\t\tvar yScroll;\r\n// \t\t\tvar elapsed = Date.now() - startTime;\r\n\r\n// \t\t\tif (elapsed > settings.duration) {\r\n// \t\t\t\tclearTimeout(this.timer);\r\n// \t\t\t}\r\n\r\n// \t\t\tpercentage = elapsed / settings.duration;\r\n\r\n// \t\t\tif (percentage > 1) {\r\n// \t\t\t\tclearTimeout(this.timer);\r\n\r\n// \t\t\t\tif (callback) {\r\n// \t\t\t\t\tcallback();\r\n// \t\t\t\t}\r\n// \t\t\t} else {\r\n// \t\t\t\tyScroll = settings.easing.outQuint(0, elapsed, offset, targetY, settings.duration);\r\n// \t\t\t\twindow.scrollTo(0, yScroll);\r\n// \t\t\t\tthis.timer = setTimeout(step, 10);\r\n// \t\t\t}\r\n// \t\t}\r\n\r\n// \t\tthis.timer = setTimeout(step, 10);\r\n// \t}\r\n// };\r\n\r\n// var SmoothScroll = React.createClass({\r\n\r\n// \trender: function () {\r\n// \t\treturn (\r\n// \t\t\t<div className=\"smooth-scroll\">\r\n// \t\t\t\t<button id=\"top\" onClick={this.handleTopClick}>scroll to bottom</button>\r\n// \t\t\t\t<div className=\"smooth-scroll--spacer\" />\r\n// \t\t\t\t<button id=\"bottom\" onClick={this.handleBottomClick}>scroll to top</button>\r\n// \t\t\t</div>\r\n// \t\t);\r\n// \t},\r\n\r\n// \thandleTopClick: function () {\r\n// \t\tsmoothScroll.scrollTo('bottom');\r\n// \t},\r\n\r\n// \thandleBottomClick: function () {\r\n// \t\tsmoothScroll.scrollTo('top');\r\n// \t}\r\n// });\r\n\r\n// React.render(<App />, document.getElementById('app'));\r\n","import React from \"react\";\r\n\r\nimport { BrowserRouter, Route, Switch, Link, Redirect } from \"react-router-dom\";\r\n\r\nimport { Layout } from \"../components/layout\";\r\nimport Home from \"./home\";\r\n\r\nimport Scroll from \"./scroll\";\r\n\r\nconst routes = [\r\n  { path: \"/\", name: \"Home\", component: () => <Home /> },\r\n  { path: \"/scroll\", name: \"scroll\", component: () => <Scroll /> },\r\n\r\n  { path: \"/css\", name: \"css\" },\r\n  { path: \"/React\", name: \"React\" },\r\n\r\n  {\r\n    path: \"/React package\",\r\n    name: \"React package\",\r\n  },\r\n];\r\n//raw-loader\r\nfunction Routes() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Layout\r\n        routes={routes}\r\n        cayoutContent={\r\n          <React.Fragment>\r\n            <Redirect from=\"/\" to=\"/\" />\r\n            {routes.map((r, i) => (\r\n              <Route\r\n                key={i}\r\n                exact={i === 0}\r\n                path={r.path}\r\n                component={r.component}\r\n              />\r\n            ))}\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport Routes from \"./routes\";\r\n\r\nfunction App() {\r\n  return (\r\n    <React.StrictMode>\r\n      <div className=\"App\">\r\n        <Routes />\r\n      </div>\r\n    </React.StrictMode>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"./resource/css/index.scss\";\r\n\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}